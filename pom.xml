<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.indykish</groupId>
	<artifactId>megam_chef</artifactId>
	<packaging>jar</packaging>
	<version>0.1.0-SNAPSHOT</version>
	<properties>
		<java-version>1.7</java-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.slf4j-version>1.7.5</org.slf4j-version>
		<skipTests>false</skipTests>
	</properties>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<scm>
		<connection>scm:git:git@github.com:rajthilakmca/megam_chef.git</connection>
		<developerConnection>scm:git:git@github.com:rajthilakmca/megam_chef.git</developerConnection>
		<url>git@github.com:rajthilakmca/megam_chef.git</url>
	</scm>
	<dependencies>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<!-- Google common -->
		<!-- Gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		<!-- Snake Yaml -->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.13</version>
		</dependency>
		<!-- Riak -->
		<dependency>
			<groupId>com.basho.riak</groupId>
			<artifactId>riak-client</artifactId>
			<version>1.4.2</version>
		</dependency>
		<!-- aws-sdk-s3 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.6.4</version>
		</dependency>
	</dependencies>
	<repositories>
		<!-- Local project repo directory. -->
		<repository>
			<id>repo</id>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>file://${project.basedir}/repo</url>
		</repository>
	</repositories>
	<build>
		<defaultGoal>install</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArgument>-Xlint:-path</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>false</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<configuration>
						<forkMode>never</forkMode>
					</configuration>
					<configuration>
						<skipTests>${skipTests}</skipTests>
					</configuration>
					<configuration>
						<useSystemClassLoader>false</useSystemClassLoader>
					</configuration>
					<includes>
						<include>**/*Tests.java</include>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/Abstract*.java</exclude>
					</excludes>
					<junitArtifactName>junit:junit</junitArtifactName>
					<argLine>-Xmx2048m</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<description>Java based Cloud Tool management. The currently supported cloud tool is Opscode Chef connector. The API accepts a JSON request, builds a chef command line using (Knife). This interfaces with Riak and has option with No Riak as well.</description>
	<url>https://www.megam.co</url>
	<name>Cloud Tool Management for Megam</name>
	<organization>
		<name>Megam Systems</name>
		<url>https://www.megam.co</url>
	</organization>
</project>
